#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ Docker-–æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
# –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ4: –ê–Ω–∞–ª–∏–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∞—Ä–µ–Ω–¥—ã Airbnb (–í–∞—Ä–∏–∞–Ω—Ç 16)

set -e

echo "üßπ –û—á–∏—Å—Ç–∫–∞ Docker-–æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞"
echo "=================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
if [ "$EUID" -ne 0 ]; then
    print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ç—Ä–µ–±—É–µ—Ç sudo –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å Docker"
    print_status "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo ./cleanup.sh"
    exit 1
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
print_status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
if docker compose ps -q | grep -q .; then
    docker compose down
    print_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    print_warning "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
fi

# –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
print_status "–£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
if docker ps -a --filter "name=Lab_4_analytical-dashboard" -q | grep -q .; then
    docker rm -f $(docker ps -a --filter "name=Lab_4_analytical-dashboard" -q) 2>/dev/null || true
    print_success "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ —É–¥–∞–ª–µ–Ω—ã"
else
    print_warning "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
print_status "–£–¥–∞–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
if docker images --filter "reference=Lab_4_analytical-dashboard*" -q | grep -q .; then
    docker rmi -f $(docker images --filter "reference=Lab_4_analytical-dashboard*" -q) 2>/dev/null || true
    print_success "–û–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞ —É–¥–∞–ª–µ–Ω—ã"
else
    print_warning "–û–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ Airflow
print_status "–£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ Airflow..."
if docker images --filter "reference=Lab_4_analytical-dashboard-airflow" -q | grep -q .; then
    docker rmi -f $(docker images --filter "reference=Lab_4_analytical-dashboard-airflow" -q) 2>/dev/null || true
    print_success "–ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–∑ Airflow —É–¥–∞–ª–µ–Ω"
else
    print_warning "–ö–∞—Å—Ç–æ–º–Ω—ã–π –æ–±—Ä–∞–∑ Airflow –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–º–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
print_status "–£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–º–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
if docker volume ls --filter "name=Lab_4_analytical-dashboard" -q | grep -q .; then
    docker volume rm -f $(docker volume ls --filter "name=Lab_4_analytical-dashboard" -q) 2>/dev/null || true
    print_success "–¢–æ–º–∞ –ø—Ä–æ–µ–∫—Ç–∞ —É–¥–∞–ª–µ–Ω—ã"
else
    print_warning "–¢–æ–º–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# –£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞
print_status "–£–¥–∞–ª–µ–Ω–∏–µ —Å–µ—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞..."
if docker network ls --filter "name=Lab_4_analytical-dashboard" -q | grep -q .; then
    docker network rm $(docker network ls --filter "name=Lab_4_analytical-dashboard" -q) 2>/dev/null || true
    print_success "–°–µ—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ —É–¥–∞–ª–µ–Ω—ã"
else
    print_warning "–°–µ—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
print_status "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤..."
docker system prune -f
print_success "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã –æ—á–∏—â–µ–Ω—ã"

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ç–æ–º–æ–≤
print_status "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Ç–æ–º–æ–≤..."
docker volume prune -f
print_success "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–æ–º–∞ –æ—á–∏—â–µ–Ω—ã"

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤
print_status "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker image prune -f
print_success "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –æ–±—Ä–∞–∑—ã –æ—á–∏—â–µ–Ω—ã"

# –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–µ—Ç–µ–π
print_status "–û—á–∏—Å—Ç–∫–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö —Å–µ—Ç–µ–π..."
docker network prune -f
print_success "–ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Å–µ—Ç–∏ –æ—á–∏—â–µ–Ω—ã"

echo ""
echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "=================================="
echo "–í—Å–µ —Ä–µ—Å—É—Ä—Å—ã –ø—Ä–æ–µ–∫—Ç–∞ —É–¥–∞–ª–µ–Ω—ã:"
echo "‚Ä¢ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞"
echo "‚Ä¢ –û–±—Ä–∞–∑—ã –ø—Ä–æ–µ–∫—Ç–∞"
echo "‚Ä¢ –¢–æ–º–∞ –ø—Ä–æ–µ–∫—Ç–∞"
echo "‚Ä¢ –°–µ—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞"
echo "‚Ä¢ –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–µ—Å—É—Ä—Å—ã Docker"
echo ""
echo "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
echo "sudo docker compose up -d"
